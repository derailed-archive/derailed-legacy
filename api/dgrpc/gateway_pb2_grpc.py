# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import gateway_pb2 as gateway__pb2
import grpc
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class GuildStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.dispatch_guild = channel.unary_unary(
            "/derailed.gateway.Guild/dispatch_guild",
            request_serializer=gateway__pb2.Interchange.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.dispatch_user = channel.unary_unary(
            "/derailed.gateway.Guild/dispatch_user",
            request_serializer=gateway__pb2.Interchange.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.dispatch_bulk = channel.unary_unary(
            "/derailed.gateway.Guild/dispatch_bulk",
            request_serializer=gateway__pb2.BulkInterchange.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.get_metadata = channel.unary_unary(
            "/derailed.gateway.Guild/get_metadata",
            request_serializer=gateway__pb2.GuildInfo.SerializeToString,
            response_deserializer=gateway__pb2.GuildMetadata.FromString,
        )


class GuildServicer(object):
    """Missing associated documentation comment in .proto file."""

    def dispatch_guild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def dispatch_user(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def dispatch_bulk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def get_metadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_GuildServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "dispatch_guild": grpc.unary_unary_rpc_method_handler(
            servicer.dispatch_guild,
            request_deserializer=gateway__pb2.Interchange.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "dispatch_user": grpc.unary_unary_rpc_method_handler(
            servicer.dispatch_user,
            request_deserializer=gateway__pb2.Interchange.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "dispatch_bulk": grpc.unary_unary_rpc_method_handler(
            servicer.dispatch_bulk,
            request_deserializer=gateway__pb2.BulkInterchange.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "get_metadata": grpc.unary_unary_rpc_method_handler(
            servicer.get_metadata,
            request_deserializer=gateway__pb2.GuildInfo.FromString,
            response_serializer=gateway__pb2.GuildMetadata.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "derailed.gateway.Guild", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Guild(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def dispatch_guild(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/derailed.gateway.Guild/dispatch_guild",
            gateway__pb2.Interchange.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def dispatch_user(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/derailed.gateway.Guild/dispatch_user",
            gateway__pb2.Interchange.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def dispatch_bulk(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/derailed.gateway.Guild/dispatch_bulk",
            gateway__pb2.BulkInterchange.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def get_metadata(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/derailed.gateway.Guild/get_metadata",
            gateway__pb2.GuildInfo.SerializeToString,
            gateway__pb2.GuildMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
